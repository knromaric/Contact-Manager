{"version":3,"sources":["context.js","components/Contact/Contact.jsx","components/Contacts/Contacts.jsx","components/Header/Header.jsx","components/StaticPages/About.jsx","components/TextInputGroup/TextInputGroup.jsx","components/AddContactForm/AddContactForm.jsx","components/StaticPages/NotFound.jsx","components/EditContact/EditContact.jsx","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactDetails","onDeleteContact","delete","onShowContactDetails","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","bind","float","color","Link","to","marginRight","Contacts","Fragment","components_Contact_Contact","Header","_ref","branding","defaultProps","About","TextInputGroup","label","placeholder","onChange","error","htmlFor","setClassName","AddContactForm","errors","onTextChange","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","components_TextInputGroup_TextInputGroup","NotFound","EditContact","updatedContact","match","params","put","App","context_Provider","BrowserRouter","basename","process","components_Header_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0b136536.chunk.js","sourcesContent":["import React, {\r\n  Component\r\n} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n    {\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(\r\n          contact => \r\n            contact.id === action.payload.id \r\n              ? (contact = action.payload) \r\n              : contact\r\n        )\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n    this.setState({\r\n      contacts: res.data\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return ( \r\n      <Context.Provider value = {\r\n        this.state\r\n      } > {\r\n        this.props.children\r\n      } </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactDetails: false\r\n  };\r\n\r\n  onDeleteContact = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n    dispatch({type:'DELETE_CONTACT', payload: id});  \r\n  };\r\n\r\n  onShowContactDetails = ()=>{\r\n    this.setState({showContactDetails: !this.state.showContactDetails})\r\n  }\r\n  \r\n  render() {\r\n    const { name, email, phone,id} = this.props.contact;\r\n    const { showContactDetails } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const {dispatch} = value;\r\n          return (\r\n            <div className=\"card card-body mb-3 pointer\">\r\n            <h4>\r\n              {name}{\" \"}\r\n              <i onClick={this.onShowContactDetails} \r\n                className=\"fas fa-sort-down\"\r\n                style={{cursor: \"pointer\"}} />\r\n              \r\n              <i className=\"fas fa-times\" \r\n                onClick={this.onDeleteContact.bind(this, id, dispatch)}\r\n                style={{cursor:'pointer', float:'right', color:'#DC3545'}}></i>\r\n              <Link to={`contact/edit/${id}`}>\r\n                <i \r\n                  className=\"fas fa-pencil-alt\"\r\n                  style={{\r\n                    cursor:'pointer',\r\n                    float: 'right',\r\n                    color:'black',\r\n                    marginRight: '1rem'\r\n                  }}></i>\r\n              </Link>\r\n            </h4>\r\n            {showContactDetails ? (\r\n              <ul className=\"list-group\">\r\n                <li className=\"list-group-item\">Email: {email}</li>\r\n                <li className=\"list-group-item\">Phone: {phone}</li>\r\n              </ul>\r\n            ) : null}\r\n          </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./../Contact/Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const contacts  = value.contacts;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb2\"><span className=\"text-danger\">Contact</span> List</h1>\r\n              {contacts.map(contact => (\r\n              <Contact key={contact.id} contact={contact}/>)\r\n              )}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = ({ branding }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </Link>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\"></i> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n              <i className=\"fas fa-plus\"></i> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n              <i className=\"fas fa-question\"></i> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"Contact Manager\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple App To Manage Contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { PropTypes } from 'prop-types';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        className = {setClassName(error)}\r\n      />\r\n      <div className=\"invalid-feedback\">{error}</div> \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nconst setClassName= (error) => {\r\n  let className = 'form-control form-control-lg';\r\n  if(error)\r\n    className += ' is-invalid';\r\n  return className;\r\n}\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"./../TextInputGroup/TextInputGroup\";\r\nimport axios from 'axios';\r\n\r\nclass AddContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onTextChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if(!name){\r\n      this.setState({errors: {name:'Name is required'}});\r\n      return;\r\n    }\r\n\r\n    if(!email){\r\n      this.setState({errors: {email:'Email is required'}});\r\n      return;\r\n\r\n    }\r\n\r\n    if(!phone){\r\n      this.setState({errors: {phone:'Phone is required'}});\r\n      return;\r\n\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3 \">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onTextChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onTextChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone Number\"\r\n                    value={phone}\r\n                    onChange={this.onTextChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContactForm;\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className='display-4'><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n      <p className=\"lead\">Sorry, That Page Does Not Exist</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"./../TextInputGroup/TextInputGroup\";\r\nimport axios from 'axios';\r\n\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount(){\r\n    const {id} = this.props.match.params;\r\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name, \r\n      email:contact.email,\r\n      phone: contact.phone\r\n    })\r\n  }\r\n  onTextChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if(!name){\r\n      this.setState({errors: {name:'Name is required'}});\r\n      return;\r\n    }\r\n\r\n    if(!email){\r\n      this.setState({errors: {email:'Email is required'}});\r\n      return;\r\n\r\n    }\r\n\r\n    if(!phone){\r\n      this.setState({errors: {phone:'Phone is required'}});\r\n      return;\r\n\r\n    }\r\n\r\n    const updatedContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n     const {id} = this.props.match.params;\r\n     const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updatedContact); \r\n     dispatch({type:'UPDATE_CONTACT', payload:res.data});\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3 \">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onTextChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onTextChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone Number\"\r\n                    value={phone}\r\n                    onChange={this.onTextChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Contacts from './components/Contacts/Contacts';\nimport Header from './components/Header/Header';\nimport About from './components/StaticPages/About'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport AddContactForm from './components/AddContactForm/AddContactForm';\nimport {Provider} from './context';\nimport NotFound from './components/StaticPages/NotFound';\nimport EditContact from './components/EditContact/EditContact';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContactForm} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}